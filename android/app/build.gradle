def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    compileSdkVersion 30
    aaptOptions.cruncherEnabled = false //防止androidx
    aaptOptions.useNewCruncher = false //
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        ndk{
            //这里其实我觉可以直接是用"armeabi-v7a"，但国内大多使用的都是"armeabi"
            abiFilters "armeabi-v7a"
        }
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.chinafood"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {

//            keyAlias 'key'
//            keyPassword 'android'
//            storeFile file('key/key.jks')
//            storePassword 'android'
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }

    }
    buildTypes {
        debug {
            ndk {
                //这里要加上，否则debug包会出问题,后面两个为可选，x86建议加上不然部分模拟器回报错
                abiFilters "armeabi","armeabi-v7a","arm64-v8a", "x86"
            }
        }
        release {
            ndk{
                //这里其实我觉可以直接是用"armeabi-v7a"，但国内大多使用的都是"armeabi"
                abiFilters "armeabi-v7a"
            }
            signingConfig signingConfigs.release
            minifyEnabled true  //资源压缩设置
            useProguard true    //代码压缩设置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
